/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.sv.visionplus.transaction.invoice.dialog.search_invoice;

import com.sv.visionplus.account.money_collection.ViewInvoicePaymentDAO;
import com.sv.visionplus.account.money_collection.model.ViewInvoicePayment;
import com.sv.visionplus.transaction.invoice.CustomerDAO;
import com.sv.visionplus.transaction.invoice.InvoiceDAO;
import com.sv.visionplus.transaction.invoice.PCInvoice;
import com.sv.visionplus.transaction.invoice.dialog.customer.model.MCustomer;
import com.sv.visionplus.transaction.invoice.model.TInvoice;
import java.util.Date;
import java.util.List;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Supervision
 */
public class searchInvoice extends javax.swing.JDialog {

    /**
     * Creates new form search_invoice
     */
    public searchInvoice(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();

        setLocationRelativeTo(null);
        model = ((DefaultTableModel) tblInvoice.getModel());
        setAllInvoice(txtDate.getText());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        txtDate = new com.sv.visionplus.util.component.textfield.CDateField();
        btnSearch = new javax.swing.JButton();
        btnSelect = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblInvoice = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        btnSearchCustomer = new javax.swing.JButton();
        txtCustomerNo = new com.sv.visionplus.util.component.textfield.CIntegerField();
        jLabel6 = new javax.swing.JLabel();
        txtInvoiceNo = new com.sv.visionplus.util.component.textfield.CStringField();
        chxFactory = new javax.swing.JRadioButton();
        chxNormal = new javax.swing.JRadioButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        btnSearch.setText("Search");
        btnSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchActionPerformed(evt);
            }
        });

        btnSelect.setText("Select");
        btnSelect.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSelectActionPerformed(evt);
            }
        });

        tblInvoice.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "#", "Invoice No", "Date", "Name", "NIC", "Address", "Mobile", "indexNo", "Invoice Amount", "Pay Amount", "Balance ", "Is Delete"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Boolean.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblInvoice);
        if (tblInvoice.getColumnModel().getColumnCount() > 0) {
            tblInvoice.getColumnModel().getColumn(7).setMinWidth(0);
            tblInvoice.getColumnModel().getColumn(7).setPreferredWidth(0);
            tblInvoice.getColumnModel().getColumn(7).setMaxWidth(0);
            tblInvoice.getColumnModel().getColumn(8).setResizable(false);
        }

        jLabel1.setText("Invoice No:");

        jLabel2.setText("Invoice Date :");

        btnSearchCustomer.setText("Search");
        btnSearchCustomer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchCustomerActionPerformed(evt);
            }
        });

        txtCustomerNo.setToolTipText("if you don't know customer number,find from customer form (#master>customer)");

        jLabel6.setText("Customer No:");

        chxFactory.setText("Factory Invoice");
        chxFactory.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chxFactoryActionPerformed(evt);
            }
        });

        chxNormal.setText("Normal Invoice");
        chxNormal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chxNormalActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(txtInvoiceNo, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(txtDate, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnSearch))
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(txtCustomerNo, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnSearchCustomer)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 120, Short.MAX_VALUE)
                        .addComponent(chxFactory)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(chxNormal))
                    .addComponent(jLabel6))
                .addGap(6, 6, 6)
                .addComponent(btnSelect)
                .addContainerGap())
            .addComponent(jScrollPane1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2))
                        .addGap(1, 1, 1)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                            .addComponent(txtDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(chxFactory)
                                    .addComponent(chxNormal))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(btnSelect)
                                    .addComponent(btnSearch)))
                            .addComponent(txtInvoiceNo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(14, 14, 14))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addGap(1, 1, 1)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtCustomerNo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnSearchCustomer))
                        .addGap(18, 18, 18)))
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 295, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnSelectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSelectActionPerformed
        TInvoice invoice = new TInvoice();
        MCustomer customer = new MCustomer();
        if (tblInvoice.getSelectedRowCount() == 1) {
            invoice.setIndexNo(Integer.parseInt(model.getValueAt(tblInvoice.getSelectedRow(), 0).toString()));
            invoice.setNumber(model.getValueAt(tblInvoice.getSelectedRow(), 1).toString());
            try {
                invoice.setInvoiceDate(com.sv.visionplus.util.formatter.FormatterUtil.getInstance().parseDate(model.getValueAt(tblInvoice.getSelectedRow(), 2).toString()));
            } catch (java.text.ParseException ex) {
                Logger.getLogger(searchInvoice.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
            }
            customer.setName(model.getValueAt(tblInvoice.getSelectedRow(), 3).toString());
            customer.setNic(model.getValueAt(tblInvoice.getSelectedRow(), 4).toString());
            customer.setAddress(model.getValueAt(tblInvoice.getSelectedRow(), 5).toString());
            customer.setContactNo(model.getValueAt(tblInvoice.getSelectedRow(), 6).toString());
            customer.setIndexNo(Integer.parseInt(model.getValueAt(tblInvoice.getSelectedRow(), 7).toString()));
            invoice.setAmount(Double.parseDouble(model.getValueAt(tblInvoice.getSelectedRow(), 8).toString()));
            invoice.setIsdelete(Boolean.valueOf(model.getValueAt(tblInvoice.getSelectedRow(), 11).toString()));
            pcInvoice.setValue(invoice, customer);
            dispose();
        } else {
            javax.swing.JOptionPane.showMessageDialog(this, "Select a row","Error Message",JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnSelectActionPerformed

    private void btnSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchActionPerformed
        String index = txtInvoiceNo.getCValue();
        Date date = txtDate.getCValue();
        List<TInvoice> list = InvoiceDAO.getInstance().searchInvoice(index, date);
        MCustomer customer = new MCustomer();
        model.setRowCount(0);
        for (TInvoice invoice : list) {
            customer = CustomerDAO.getInstance().searchCustomer(invoice.getCustomer());

            addData(invoice, customer);
        }
    }//GEN-LAST:event_btnSearchActionPerformed

    private void btnSearchCustomerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchCustomerActionPerformed
        Integer customerNo = txtCustomerNo.getCValue();
        List<TInvoice> list = InvoiceDAO.getInstance().searchInvoice(customerNo);
        MCustomer customer = new MCustomer();
        customer = CustomerDAO.getInstance().searchCustomer(customerNo);
        model.setRowCount(0);
        for (TInvoice invoice : list) {

            addData(invoice, customer);
        }
    }//GEN-LAST:event_btnSearchCustomerActionPerformed

    private void chxFactoryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chxFactoryActionPerformed
        setAllInvoice(txtDate.getText());
    }//GEN-LAST:event_chxFactoryActionPerformed

    private void chxNormalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chxNormalActionPerformed
        setAllInvoice(txtDate.getText());
    }//GEN-LAST:event_chxNormalActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(searchInvoice.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(searchInvoice.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(searchInvoice.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(searchInvoice.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                searchInvoice dialog = new searchInvoice(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnSearch;
    private javax.swing.JButton btnSearchCustomer;
    private javax.swing.JButton btnSelect;
    private javax.swing.JRadioButton chxFactory;
    private javax.swing.JRadioButton chxNormal;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblInvoice;
    private com.sv.visionplus.util.component.textfield.CIntegerField txtCustomerNo;
    private com.sv.visionplus.util.component.textfield.CDateField txtDate;
    private com.sv.visionplus.util.component.textfield.CStringField txtInvoiceNo;
    // End of variables declaration//GEN-END:variables

    private DefaultTableModel model;
    private PCInvoice pcInvoice;

    public void setFrame(PCInvoice pCInvoice) {
        pcInvoice = pCInvoice;
    }

    private void setAllInvoice(String date) {
        System.out.println(date);
        java.util.List<TInvoice> listInvoice = com.sv.visionplus.transaction.invoice.InvoiceDAO.getInstance().allInvoice(date);
        MCustomer customer = new MCustomer();
        model.setRowCount(0);
        for (TInvoice invoice : listInvoice) {
            customer = CustomerDAO.getInstance().searchCustomer(invoice.getCustomer());

            addData(invoice, customer);
        }
    }

    private void addData(TInvoice invoice, MCustomer customer) {
        Double payValue=0.00;
        List<ViewInvoicePayment> list = ViewInvoicePaymentDAO.getInstance().searchInvoicePaymentFromInvoice(invoice.getIndexNo());
        for (ViewInvoicePayment payment : list) {
            payValue+=payment.getTotal();
        }

        Object[] rowData = {
            invoice.getIndexNo(),
            invoice.getNumber(),
            invoice.getInvoiceDate(),
            customer.getName(),
            customer.getNic(),
            customer.getAddress(),
            customer.getContactNo(),
            customer.getIndexNo(),
            invoice.getAmount(),
            payValue,
            invoice.getAmount()- payValue,
            invoice.getIsdelete()
        };
        if (chxNormal.isSelected()) {
            if ("NORMAL INVOICE".equals(invoice.getStatus2())) {
                model.addRow(rowData);
            }
        } else if (chxFactory.isSelected()) {
            if ("FACTORY INVOICE".equals(invoice.getStatus2())) {
                model.addRow(rowData);
            }
        } else {
            model.addRow(rowData);
        }
    }

}
