/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.sv.visionplus.channel.doctor;

import com.sv.visionplus.base.AbstractObjectCreator;
import com.sv.visionplus.channel.doctor.model.DoctorModel;
import com.sv.visionplus.system.exception.VPException;

/**
 *
 * @author Supervision
 */
public class PCDoctor extends AbstractObjectCreator<DoctorModel> {

    private DoctorModel doctor;

    /**
     * Creates new form PCDoctro
     */
    public PCDoctor() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        txtIndexNo = new com.sv.visionplus.util.component.textfield.CIntegerField();
        jLabel3 = new javax.swing.JLabel();
        txtName = new com.sv.visionplus.util.component.textfield.CStringField();

        jLabel1.setText("Invoice No.:");

        jLabel3.setText("Doctor Name :");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtName, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtIndexNo, javax.swing.GroupLayout.DEFAULT_SIZE, 293, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtIndexNo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private com.sv.visionplus.util.component.textfield.CIntegerField txtIndexNo;
    private com.sv.visionplus.util.component.textfield.CStringField txtName;
    // End of variables declaration//GEN-END:variables

    @Override
    public void setIdealMode() {
        txtIndexNo.setCValueEditable(false);
        txtName.setCValueEditable(false);
    }

    @Override
    public void setNewMode() {
        doctor = new DoctorModel();

        txtIndexNo.setCValueEditable(false);
        txtName.setCValueEditable(true);
    }

    @Override
    public void setEditMode() {

        txtIndexNo.setCValueEditable(false);
        txtName.setCValueEditable(true);
    }

    @Override
    public void resetFields() {

        txtIndexNo.resetCValue();
        txtName.resetCValue();
    }

    @Override
    public void initObject() throws VPException {

        doctor.setIndexNo(txtIndexNo.getCValue());
        doctor.setdoctor_name(txtName.getCValue());
    }

    @Override
    public void initInterface() throws VPException {

        txtIndexNo.setCValue(doctor.getIndexNo());
        txtName.setCValue(doctor.getdoctor_name());
    }

    @Override
    protected void setValueAbstract(DoctorModel object) {
        doctor = object;

    }

    @Override
    protected DoctorModel getValueAbstract() {
        return doctor;
    }
}
