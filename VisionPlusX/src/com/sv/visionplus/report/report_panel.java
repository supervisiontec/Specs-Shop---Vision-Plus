/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.sv.visionplus.report;

import static com.sv.visionplus.report.report_file.ReportFiles.*;
import com.sv.visionplus.report.report_file.dialog.BestCustomer;
import com.sv.visionplus.report.report_file.dialog.BestUser;
import com.sv.visionplus.report.report_file.dialog.Channel;
import com.sv.visionplus.report.report_file.dialog.ChannelList;
import com.sv.visionplus.report.report_file.dialog.Claim;
import com.sv.visionplus.report.report_file.dialog.FactoryReport;
import com.sv.visionplus.report.report_file.dialog.GrnSummary;
import com.sv.visionplus.report.report_file.dialog.InvoiceList;
import com.sv.visionplus.report.report_file.dialog.InvoiceReceipt;
import com.sv.visionplus.report.report_file.dialog.InvoiceStatus;
import com.sv.visionplus.report.report_file.dialog.IssueFrameLens;
import com.sv.visionplus.report.report_file.dialog.model.ClaimModel;
import com.sv.visionplus.util.database.DatabaseUtil;
import java.io.File;
import java.sql.Connection;
import java.sql.SQLException;
import java.util.Date;
import java.util.HashMap;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.util.JRLoader;
import net.sf.jasperreports.swing.JRViewer;

/**
 *
 * @author Supervision
 */
public class report_panel extends javax.swing.JPanel {

   
    private Connection openConnection;

    public report_panel() {
        initComponents();
        try {
            openConnection = DatabaseUtil.getInstance().openConnection();
        } catch (SQLException ex) {
            Logger.getLogger(report_panel.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlReport = new javax.swing.JPanel();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        jButton8 = new javax.swing.JButton();
        jButton9 = new javax.swing.JButton();
        jButton10 = new javax.swing.JButton();
        jButton11 = new javax.swing.JButton();

        pnlReport.setBackground(new java.awt.Color(230, 230, 238));
        pnlReport.setLayout(new javax.swing.BoxLayout(pnlReport, javax.swing.BoxLayout.LINE_AXIS));

        jButton2.setText("Invoice Reciept");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("Channel");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setText("Invoice Status");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton5.setText("Best Customer");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jButton6.setText("Issue Frame /  Lens");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        jButton1.setText("GRN Symmary");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton7.setText("Best User");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        jButton8.setText("Claim");
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });

        jButton9.setText("Channel List");
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });

        jButton10.setText("Invoice List");
        jButton10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton10ActionPerformed(evt);
            }
        });

        jButton11.setText("Factory Report");
        jButton11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton11ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton6, javax.swing.GroupLayout.DEFAULT_SIZE, 196, Short.MAX_VALUE)
                    .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton9, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton10, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton11, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(pnlReport, javax.swing.GroupLayout.DEFAULT_SIZE, 194, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlReport, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton11, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton9, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton10, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton7, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton8, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        InvoiceReceipt invoiceReceipt = new InvoiceReceipt(null, true);
        invoiceReceipt.setFrame(this);
        invoiceReceipt.setVisible(true);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        Channel channel = new Channel(null, true);
        channel.setFrame(this);
        channel.setVisible(true);

    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        InvoiceStatus invoiceStatus = new InvoiceStatus(null, true);
        invoiceStatus.setFrame(this);
        invoiceStatus.setVisible(true);

    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        BestCustomer bestCustomer = new BestCustomer(null, true);
        bestCustomer.setFrame(this);
        bestCustomer.setVisible(true);

    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        IssueFrameLens ifl = new IssueFrameLens(null, true);
        ifl.setFrame(this);
        ifl.setVisible(true);

    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        BestUser bestUser = new BestUser(null, true);
        bestUser.setFrame(this);
        bestUser.setVisible(true);
    }//GEN-LAST:event_jButton7ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        GrnSummary gs = new GrnSummary(null, true);
        gs.setFrame(this);
        gs.setVisible(true);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        Claim claim = new Claim(null, true);
        claim.setFrame(this);
        claim.setVisible(true);
    }//GEN-LAST:event_jButton8ActionPerformed

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
        ChannelList list=new ChannelList(null, true);
        list.setFrame(this);
        list.setVisible(true);
    }//GEN-LAST:event_jButton9ActionPerformed

    private void jButton10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton10ActionPerformed
        InvoiceList list=new InvoiceList(null, true);
        list.setFrame(this);
        list.setVisible(true);
    }//GEN-LAST:event_jButton10ActionPerformed

    private void jButton11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton11ActionPerformed
        FactoryReport report=new FactoryReport(null, true);
        report.setFrame(this);
        report.setVisible(true);
    }//GEN-LAST:event_jButton11ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton10;
    private javax.swing.JButton jButton11;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private javax.swing.JPanel pnlReport;
    // End of variables declaration//GEN-END:variables

    public void setInvoiceReceipt(String indexNo) {
        try {
            JasperReport jasperReport = (JasperReport) JRLoader.loadObject(getReportUrl(INVOICE_RECEIPT));
            HashMap<String, Object> dataMap = new HashMap<>();
            dataMap.put("index", indexNo);
            JasperPrint jasperPrint = JasperFillManager.fillReport(jasperReport, dataMap, openConnection);

//            JasperPrintManager.printReport(jasperPrint, true);
            JRViewer jr = new JRViewer(jasperPrint);
            pnlReport.add(jr);
            jr.revalidate();
            
        } catch (JRException ex) {
            Logger.getLogger(report_panel.class.getName()).log(Level.SEVERE, null, ex);
        }catch (NullPointerException ex) {
            JOptionPane.showMessageDialog(null, "No Value to Display..:(");
        }
    }

    public void setChannel(String channelId, Date date) {
        try {
            JasperReport jasperReport = (JasperReport) JRLoader.loadObject(getReportUrl(CHANNEL));
            HashMap<String, Object> dataMap = new HashMap<>();
            dataMap.put("channel_id", channelId);
            dataMap.put("channel_date", date);
            JasperPrint jasperPrint = JasperFillManager.fillReport(jasperReport, dataMap, openConnection);

//            JasperPrintManager.printReport(jasperPrint, true);
            JRViewer jr = new JRViewer(jasperPrint);
            pnlReport.add(jr);
            jr.revalidate();
        } catch (JRException ex) {
            Logger.getLogger(report_panel.class.getName()).log(Level.SEVERE, null, ex);
        
        } catch (NullPointerException ex) {
            JOptionPane.showMessageDialog(null, "No Value to Display..:(");
        }
    }

    public void setInvoiceStatus(String Status, Date fromDate, Date toDate) {
        try {
            JasperReport jasperReport = (JasperReport) JRLoader.loadObject(getReportUrl(INVOICE_STATUS));
            HashMap<String, Object> dataMap = new HashMap<>();
            dataMap.put("status", Status);
            dataMap.put("from", fromDate);
            dataMap.put("to", toDate);
            JasperPrint jasperPrint = JasperFillManager.fillReport(jasperReport, dataMap, openConnection);

//            JasperPrintManager.printReport(jasperPrint, true);
            JRViewer jr = new JRViewer(jasperPrint);
            pnlReport.add(jr);
            jr.revalidate();
        } catch (JRException ex) {
            Logger.getLogger(report_panel.class.getName()).log(Level.SEVERE, null, ex);
        }catch (NullPointerException ex) {
            JOptionPane.showMessageDialog(null, "No Value to Display..:(");
        }
    }

    public void setBestCustomer(double amount) {
        try {
            JasperReport jasperReport = (JasperReport) JRLoader.loadObject(getReportUrl(BEST_CUSTOMER));
            HashMap<String, Object> dataMap = new HashMap<>();
            dataMap.put("invoices_amount", amount);
            dataMap.put("@REPORT_NAME", "Best Customer Report");
            JasperPrint jasperPrint = JasperFillManager.fillReport(jasperReport, dataMap, openConnection);

//            JasperPrintManager.printReport(jasperPrint, true);
            JRViewer jr = new JRViewer(jasperPrint);
            pnlReport.add(jr);
            jr.revalidate();
        } catch (JRException ex) {
            Logger.getLogger(report_panel.class.getName()).log(Level.SEVERE, null, ex);
        }catch (NullPointerException ex) {
            JOptionPane.showMessageDialog(null, "No Value to Display..:(");
        }
    }

    public void setIssueFrameLens(String type, Date date) {
        try {
            JasperReport jasperReport = (JasperReport) JRLoader.loadObject(getReportUrl(ISSUE_FRAME_LENS));
            HashMap<String, Object> dataMap = new HashMap<>();
            dataMap.put("type", type);
            dataMap.put("date", date);
            dataMap.put("@REPORT_NAME", type + " Issue Report");
            JasperPrint jasperPrint = JasperFillManager.fillReport(jasperReport, dataMap, openConnection);

//            JasperPrintManager.printReport(jasperPrint, true);
            JRViewer jr = new JRViewer(jasperPrint);
            pnlReport.add(jr);
            jr.revalidate();
        } catch (JRException ex) {
            Logger.getLogger(report_panel.class.getName()).log(Level.SEVERE, null, ex);
        }catch (NullPointerException ex) {
            JOptionPane.showMessageDialog(null, "No Value to Display..:(");
        }
    }

    public void setBestUser(Date fromDate, Date toDate) {
        try {
            JasperReport jasperReport = (JasperReport) JRLoader.loadObject(getReportUrl(BEST_USER));
            HashMap<String, Object> dataMap = new HashMap<>();
            dataMap.put("fromDate", fromDate);
            dataMap.put("toDate", toDate);
            JasperPrint jasperPrint = JasperFillManager.fillReport(jasperReport, dataMap, openConnection);

//            JasperPrintManager.printReport(jasperPrint, true);
            JRViewer jr = new JRViewer(jasperPrint);
            pnlReport.add(jr);
            jr.revalidate();
        } catch (JRException ex) {
            Logger.getLogger(report_panel.class.getName()).log(Level.SEVERE, null, ex);
        }catch (NullPointerException ex) {
            JOptionPane.showMessageDialog(null, "No Value to Display..:(");
        }
    }

    public void setGrnSummary(Date fromDate, Date toDate) {
        try {
            JasperReport jasperReport = (JasperReport) JRLoader.loadObject(getReportUrl(GRN));
            HashMap<String, Object> dataMap = new HashMap<>();
            dataMap.put("fromDate", fromDate);
            dataMap.put("toDate", toDate);
            JasperPrint jasperPrint = JasperFillManager.fillReport(jasperReport, dataMap, openConnection);

            JRViewer jr = new JRViewer(jasperPrint);
            pnlReport.add(jr);
            jr.revalidate();
        } catch (JRException ex) {
            Logger.getLogger(report_panel.class.getName()).log(Level.SEVERE, null, ex);
        }catch (NullPointerException ex) {
            JOptionPane.showMessageDialog(null, "No Value to Display..:(");
        }
    }

    public void setClaim(ClaimModel claimModel) {
        try {
            JasperReport jasperReport = (JasperReport) JRLoader.loadObject(getReportUrl(CLAIM));
            HashMap<String, Object> dataMap = new HashMap<>();
            dataMap.put("address", claimModel.getAddress());
            dataMap.put("amount", claimModel.getAmount());
            dataMap.put("axis_dist_left", claimModel.getAxisDistLeft());
            dataMap.put("axis_dist_right", claimModel.getAxisDistRight());
            dataMap.put("axis_near_left", claimModel.getAxisNearLeft());
            dataMap.put("axis_near_right", claimModel.getAxisNearRight());
            dataMap.put("contact", claimModel.getContact());
            dataMap.put("cyl_dist_left", claimModel.getCylDistLeft());
            dataMap.put("cyl_dist_right", claimModel.getCylDistRight());
            dataMap.put("cyl_near_left", claimModel.getCylNearLeft());
            dataMap.put("cyl_near_right", claimModel.getCylNearRight());
            dataMap.put("invoice_index", claimModel.getInvoiceIndex());
            dataMap.put("invoice_number", claimModel.getInvoiceNumber());
            dataMap.put("lens_brand", claimModel.getLensBrand());
            dataMap.put("lens_name", claimModel.getLensName());
            dataMap.put("lens_type", claimModel.getLensType());
            dataMap.put("name", claimModel.getName());
            dataMap.put("sph_dist_left", claimModel.getSphDistLeft());
            dataMap.put("sph_dist_right", claimModel.getSphDistReght());
            dataMap.put("sph_near_left", claimModel.getSphNearLeft());
            dataMap.put("sph_near_right", claimModel.getSphNearReght());
            
            JasperPrint jasperPrint = JasperFillManager.fillReport(jasperReport, dataMap, openConnection);

            JRViewer jr = new JRViewer(jasperPrint);
            pnlReport.add(jr);
            jr.revalidate();
        } catch (JRException ex) {
            Logger.getLogger(report_panel.class.getName()).log(Level.SEVERE, null, ex);
        }catch (NullPointerException ex) {
            JOptionPane.showMessageDialog(null, "No Value to Display..:(");
        }
    }

    public void setChannelList(Date channelDate) {
        try {
            JasperReport jasperReport = (JasperReport) JRLoader.loadObject(getReportUrl(CHANNEL_LIST));
            HashMap<String, Object> dataMap = new HashMap<>();
            dataMap.put("channelDate", channelDate);
            JasperPrint jasperPrint = JasperFillManager.fillReport(jasperReport, dataMap, openConnection);

            JRViewer jr = new JRViewer(jasperPrint);
            pnlReport.add(jr);
            jr.revalidate();
        } catch (JRException ex) {
            Logger.getLogger(report_panel.class.getName()).log(Level.SEVERE, null, ex);
        }catch (NullPointerException ex) {
            JOptionPane.showMessageDialog(null, "No Value to Display..:(");
        }
    }

    public void setInvoiceList(String fromdate,String toDate, String status) {
        try {
            JasperReport jasperReport = (JasperReport) JRLoader.loadObject(getReportUrl(INVOICE_LIST));
            HashMap<String, Object> dataMap = new HashMap<>();
            dataMap.put("fromDate", fromdate);
            dataMap.put("toDate", toDate);
            dataMap.put("type", status);
            JasperPrint jasperPrint = JasperFillManager.fillReport(jasperReport, dataMap, openConnection);

            JRViewer jr = new JRViewer(jasperPrint);
            pnlReport.add(jr);
            jr.revalidate();
        } catch (JRException ex) {
            Logger.getLogger(report_panel.class.getName()).log(Level.SEVERE, null, ex);
        }catch (NullPointerException ex) {
            JOptionPane.showMessageDialog(null, "No Value to Display..:(");
        }
    }

    public void setFactoryReport(String indexNo) {
        try {
            JasperReport jasperReport = (JasperReport) JRLoader.loadObject(getReportUrl(FACTORY_REPORT));
            HashMap<String, Object> dataMap = new HashMap<>();
            dataMap.put("index", indexNo);
            JasperPrint jasperPrint = JasperFillManager.fillReport(jasperReport, dataMap, openConnection);

//            JasperPrintManager.printReport(jasperPrint, true);
            JRViewer jr = new JRViewer(jasperPrint);
            pnlReport.add(jr);
            jr.revalidate();
            
        } catch (JRException ex) {
            Logger.getLogger(report_panel.class.getName()).log(Level.SEVERE, null, ex);
        }catch (NullPointerException ex) {
            JOptionPane.showMessageDialog(null, "No Value to Display..:(");
        }
    }
}
