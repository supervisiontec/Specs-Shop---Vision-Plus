/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.sv.visionplus.report;

import static com.sv.visionplus.report.report_file.ReportFiles.*;
import com.sv.visionplus.report.report_file.dialog.BestCustomer;
import com.sv.visionplus.report.report_file.dialog.BestUser;
import com.sv.visionplus.report.report_file.dialog.Channel;
import com.sv.visionplus.report.report_file.dialog.ChannelClaim;
import com.sv.visionplus.report.report_file.dialog.ChannelList;
import com.sv.visionplus.report.report_file.dialog.Claim;
import com.sv.visionplus.report.report_file.dialog.DailyEarn;
import com.sv.visionplus.report.report_file.dialog.FactoryReport;
import com.sv.visionplus.report.report_file.dialog.GrnSummary;
import com.sv.visionplus.report.report_file.dialog.InvoiceList;
import com.sv.visionplus.report.report_file.dialog.InvoiceReceipt;
import com.sv.visionplus.report.report_file.dialog.InvoiceStatus;
import com.sv.visionplus.report.report_file.dialog.IssueFrameLens;
import com.sv.visionplus.report.report_file.dialog.Stock;
import com.sv.visionplus.report.report_file.dialog.VoucherSummary;
import com.sv.visionplus.report.report_file.dialog.model.ClaimModel;
import com.sv.visionplus.util.database.DatabaseUtil;
import java.sql.Connection;
import java.sql.SQLException;
import java.util.Date;
import java.util.HashMap;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.util.JRLoader;
import net.sf.jasperreports.swing.JRViewer;
import visionplusx.Home;
import visionplusx.model.MUser;

/**
 *
 * @author Supervision
 */
public class report_panel extends javax.swing.JPanel {

    private Connection openConnection;
    private MUser user;

    public report_panel() {
        initComponents();
        try {
            openConnection = DatabaseUtil.getInstance().openConnection();
        } catch (SQLException ex) {
            Logger.getLogger(report_panel.class.getName()).log(Level.SEVERE, null, ex);
        }
        user = new Home().getUser();
        if ("User".equals(user.getType())) {
            btnBestCustomer.setVisible(false);
            btnBestUser.setVisible(false);
//            btnChannel.setVisible(false);
            btnChannelList.setVisible(false);
            btnGrnSummary.setVisible(false);
            btnInvList.setVisible(false);
            btnInvStatus.setVisible(false);
            btnIssueFrame.setVisible(false);
            btnVoucherSummary.setVisible(false);
            btnDailyEarn.setVisible(false);
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlReport = new javax.swing.JPanel();
        jButton2 = new javax.swing.JButton();
        btnChannel = new javax.swing.JButton();
        btnInvStatus = new javax.swing.JButton();
        btnBestCustomer = new javax.swing.JButton();
        btnIssueFrame = new javax.swing.JButton();
        btnGrnSummary = new javax.swing.JButton();
        btnBestUser = new javax.swing.JButton();
        btnClaim = new javax.swing.JButton();
        btnChannelList = new javax.swing.JButton();
        btnInvList = new javax.swing.JButton();
        jButton11 = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        btnStock = new javax.swing.JButton();
        btnVoucherSummary = new javax.swing.JButton();
        btnDailyEarn = new javax.swing.JButton();
        btnDailyEarn1 = new javax.swing.JButton();

        pnlReport.setBackground(new java.awt.Color(230, 230, 238));
        pnlReport.setLayout(new javax.swing.BoxLayout(pnlReport, javax.swing.BoxLayout.LINE_AXIS));

        jButton2.setText("Invoice Reciept");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        btnChannel.setText("Channel");
        btnChannel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnChannelActionPerformed(evt);
            }
        });

        btnInvStatus.setText("Invoice Status");
        btnInvStatus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnInvStatusActionPerformed(evt);
            }
        });

        btnBestCustomer.setText("Best Customer");
        btnBestCustomer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBestCustomerActionPerformed(evt);
            }
        });

        btnIssueFrame.setText("Issue Frame /  Lens");
        btnIssueFrame.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnIssueFrameActionPerformed(evt);
            }
        });

        btnGrnSummary.setText("GRN Symmary");
        btnGrnSummary.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGrnSummaryActionPerformed(evt);
            }
        });

        btnBestUser.setText("Best User");
        btnBestUser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBestUserActionPerformed(evt);
            }
        });

        btnClaim.setText("Claim");
        btnClaim.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClaimActionPerformed(evt);
            }
        });

        btnChannelList.setText("Channel List");
        btnChannelList.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnChannelListActionPerformed(evt);
            }
        });

        btnInvList.setText("Invoice List");
        btnInvList.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnInvListActionPerformed(evt);
            }
        });

        jButton11.setText("Factory Report");
        jButton11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton11ActionPerformed(evt);
            }
        });

        jButton1.setText("Clear");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        btnStock.setText("Stock");
        btnStock.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnStockActionPerformed(evt);
            }
        });

        btnVoucherSummary.setText("Voucher Summary");
        btnVoucherSummary.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVoucherSummaryActionPerformed(evt);
            }
        });

        btnDailyEarn.setText("Daily Monthly Yearly Earning");
        btnDailyEarn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDailyEarnActionPerformed(evt);
            }
        });

        btnDailyEarn1.setText("Channel Claim");
        btnDailyEarn1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDailyEarn1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnChannel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnInvStatus, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnBestCustomer, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnIssueFrame, javax.swing.GroupLayout.DEFAULT_SIZE, 196, Short.MAX_VALUE)
                    .addComponent(btnGrnSummary, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnBestUser, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnClaim, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnChannelList, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnInvList, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton11, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnStock, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnVoucherSummary, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnDailyEarn, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnDailyEarn1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pnlReport, javax.swing.GroupLayout.DEFAULT_SIZE, 399, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton11, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnChannel, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnChannelList, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnInvStatus, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnInvList, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnBestCustomer, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnBestUser, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnIssueFrame, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnGrnSummary, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnClaim, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnStock, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnVoucherSummary, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnDailyEarn, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnDailyEarn1, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(layout.createSequentialGroup()
                .addComponent(pnlReport, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        InvoiceReceipt invoiceReceipt = new InvoiceReceipt(null, true);
        invoiceReceipt.setFrame(this);
        invoiceReceipt.setVisible(true);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void btnChannelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnChannelActionPerformed
        Channel channel = new Channel(null, true);
        channel.setFrame(this);
        channel.setVisible(true);

    }//GEN-LAST:event_btnChannelActionPerformed

    private void btnInvStatusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnInvStatusActionPerformed
        InvoiceStatus invoiceStatus = new InvoiceStatus(null, true);
        invoiceStatus.setFrame(this);
        invoiceStatus.setVisible(true);

    }//GEN-LAST:event_btnInvStatusActionPerformed

    private void btnBestCustomerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBestCustomerActionPerformed
        BestCustomer bestCustomer = new BestCustomer(null, true);
        bestCustomer.setFrame(this);
        bestCustomer.setVisible(true);

    }//GEN-LAST:event_btnBestCustomerActionPerformed

    private void btnIssueFrameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnIssueFrameActionPerformed
        IssueFrameLens ifl = new IssueFrameLens(null, true);
        ifl.setFrame(this);
        ifl.setVisible(true);

    }//GEN-LAST:event_btnIssueFrameActionPerformed

    private void btnBestUserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBestUserActionPerformed
        BestUser bestUser = new BestUser(null, true);
        bestUser.setFrame(this);
        bestUser.setVisible(true);
    }//GEN-LAST:event_btnBestUserActionPerformed

    private void btnGrnSummaryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGrnSummaryActionPerformed
        GrnSummary gs = new GrnSummary(null, true);
        gs.setFrame(this);
        gs.setVisible(true);
    }//GEN-LAST:event_btnGrnSummaryActionPerformed

    private void btnClaimActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClaimActionPerformed
        Claim claim = new Claim(null, true);
        claim.setFrame(this);
        claim.setVisible(true);
    }//GEN-LAST:event_btnClaimActionPerformed

    private void btnChannelListActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnChannelListActionPerformed
        ChannelList list = new ChannelList(null, true);
        list.setFrame(this);
        list.setVisible(true);
    }//GEN-LAST:event_btnChannelListActionPerformed

    private void btnInvListActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnInvListActionPerformed
        InvoiceList list = new InvoiceList(null, true);
        list.setFrame(this);
        list.setVisible(true);
    }//GEN-LAST:event_btnInvListActionPerformed

    private void jButton11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton11ActionPerformed
        FactoryReport report = new FactoryReport(null, true);
        report.setFrame(this);
        report.setVisible(true);
    }//GEN-LAST:event_jButton11ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        pnlReport.removeAll();
        pnlReport.repaint();
        pnlReport.revalidate();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void btnStockActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnStockActionPerformed
        Stock stock = new Stock(null, true);
        stock.setFrame(this);
        stock.setVisible(true);
    }//GEN-LAST:event_btnStockActionPerformed

    private void btnVoucherSummaryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVoucherSummaryActionPerformed
        VoucherSummary voucherSummary = new VoucherSummary(null, true);
        voucherSummary.setFrame(this);
        voucherSummary.setVisible(true);
    }//GEN-LAST:event_btnVoucherSummaryActionPerformed

    private void btnDailyEarnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDailyEarnActionPerformed
        DailyEarn dailyEarn = new DailyEarn(null,true);
        dailyEarn.setFrame(this);
        dailyEarn.setVisible(true);
    }//GEN-LAST:event_btnDailyEarnActionPerformed

    private void btnDailyEarn1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDailyEarn1ActionPerformed
        ChannelClaim channelClaim = new ChannelClaim(null,true);
        channelClaim.setFrame(this);
        channelClaim.setVisible(true);
    }//GEN-LAST:event_btnDailyEarn1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBestCustomer;
    private javax.swing.JButton btnBestUser;
    private javax.swing.JButton btnChannel;
    private javax.swing.JButton btnChannelList;
    private javax.swing.JButton btnClaim;
    private javax.swing.JButton btnDailyEarn;
    private javax.swing.JButton btnDailyEarn1;
    private javax.swing.JButton btnGrnSummary;
    private javax.swing.JButton btnInvList;
    private javax.swing.JButton btnInvStatus;
    private javax.swing.JButton btnIssueFrame;
    private javax.swing.JButton btnStock;
    private javax.swing.JButton btnVoucherSummary;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton11;
    private javax.swing.JButton jButton2;
    private javax.swing.JPanel pnlReport;
    // End of variables declaration//GEN-END:variables

    public void setInvoiceReceipt(String indexNo) {
        try {
            JasperReport jasperReport = (JasperReport) JRLoader.loadObject(getReportUrl(INVOICE_RECEIPT));
            HashMap<String, Object> dataMap = new HashMap<>();
            dataMap.put("index", indexNo);
            JasperPrint jasperPrint = JasperFillManager.fillReport(jasperReport, dataMap, openConnection);

//            JasperPrintManager.printReport(jasperPrint, true);
            JRViewer jr = new JRViewer(jasperPrint);
            pnlReport.add(jr);
            jr.revalidate();

        } catch (JRException ex) {
            Logger.getLogger(report_panel.class.getName()).log(Level.SEVERE, null, ex);
        } catch (NullPointerException ex) {
            JOptionPane.showMessageDialog(null, "No Value to Display..:(", "Error Message", JOptionPane.ERROR_MESSAGE);
        }
    }

    public void setChannel(String channelId, Date date) {
        try {
            JasperReport jasperReport = (JasperReport) JRLoader.loadObject(getReportUrl(CHANNEL));
            HashMap<String, Object> dataMap = new HashMap<>();
            dataMap.put("channel_id", channelId);
            dataMap.put("channel_date", date);
            JasperPrint jasperPrint = JasperFillManager.fillReport(jasperReport, dataMap, openConnection);

//            JasperPrintManager.printReport(jasperPrint, true);
            JRViewer jr = new JRViewer(jasperPrint);
            pnlReport.add(jr);
            jr.revalidate();
        } catch (JRException ex) {
            Logger.getLogger(report_panel.class.getName()).log(Level.SEVERE, null, ex);

        } catch (NullPointerException ex) {
            JOptionPane.showMessageDialog(null, "No Value to Display..:(", "Error Message", JOptionPane.ERROR_MESSAGE);
        }
    }

    public void setInvoiceStatus(String Status, Date fromDate, Date toDate) {
        try {
            JasperReport jasperReport = (JasperReport) JRLoader.loadObject(getReportUrl(INVOICE_STATUS));
            HashMap<String, Object> dataMap = new HashMap<>();
            dataMap.put("status", Status);
            dataMap.put("from", fromDate);
            dataMap.put("to", toDate);
            JasperPrint jasperPrint = JasperFillManager.fillReport(jasperReport, dataMap, openConnection);

//            JasperPrintManager.printReport(jasperPrint, true);
            JRViewer jr = new JRViewer(jasperPrint);
            pnlReport.add(jr);
            jr.revalidate();
        } catch (JRException ex) {
            Logger.getLogger(report_panel.class.getName()).log(Level.SEVERE, null, ex);
        } catch (NullPointerException ex) {
            JOptionPane.showMessageDialog(null, "No Value to Display..:(", "Error Message", JOptionPane.ERROR_MESSAGE);
        }
    }

    public void setBestCustomer(double amount) {
        try {
            JasperReport jasperReport = (JasperReport) JRLoader.loadObject(getReportUrl(BEST_CUSTOMER));
            HashMap<String, Object> dataMap = new HashMap<>();
            dataMap.put("invoices_amount", amount);
            dataMap.put("@REPORT_NAME", "Best Customer Report");
            JasperPrint jasperPrint = JasperFillManager.fillReport(jasperReport, dataMap, openConnection);

//            JasperPrintManager.printReport(jasperPrint, true);
            JRViewer jr = new JRViewer(jasperPrint);
            pnlReport.add(jr);
            jr.revalidate();
        } catch (JRException ex) {
            Logger.getLogger(report_panel.class.getName()).log(Level.SEVERE, null, ex);
        } catch (NullPointerException ex) {
            JOptionPane.showMessageDialog(null, "No Value to Display..:(", "Error Message", JOptionPane.ERROR_MESSAGE);
        }
    }

    public void setStockReport(String code, String brand, String category,String name) {
        try {
            JasperReport jasperReport = (JasperReport) JRLoader.loadObject(getReportUrl(STOCK));
            HashMap<String, Object> dataMap = new HashMap<>();
            dataMap.put("code", code);
            dataMap.put("brand", brand);
            dataMap.put("category", category);
            dataMap.put("item_name", name);
            JasperPrint jasperPrint = JasperFillManager.fillReport(jasperReport, dataMap, openConnection);

//            JasperPrintManager.printReport(jasperPrint, true);
            JRViewer jr = new JRViewer(jasperPrint);
            pnlReport.add(jr);
            jr.revalidate();
        } catch (JRException ex) {
            Logger.getLogger(report_panel.class.getName()).log(Level.SEVERE, null, ex);
        } catch (NullPointerException ex) {
            JOptionPane.showMessageDialog(null, "No Value to Display..:(", "Error Message", JOptionPane.ERROR_MESSAGE);
        }
    }

    public void setIssueFrameLens(String type, Date date) {
        try {
            JasperReport jasperReport = (JasperReport) JRLoader.loadObject(getReportUrl(ISSUE_FRAME_LENS));
            HashMap<String, Object> dataMap = new HashMap<>();
            dataMap.put("type", type);
            dataMap.put("date", date);
            dataMap.put("@REPORT_NAME", type + " Issue Report");
            JasperPrint jasperPrint = JasperFillManager.fillReport(jasperReport, dataMap, openConnection);

//            JasperPrintManager.printReport(jasperPrint, true);
            JRViewer jr = new JRViewer(jasperPrint);
            pnlReport.add(jr);
            jr.revalidate();
        } catch (JRException ex) {
            Logger.getLogger(report_panel.class.getName()).log(Level.SEVERE, null, ex);
        } catch (NullPointerException ex) {
            JOptionPane.showMessageDialog(null, "No Value to Display..:(", "Error Message", JOptionPane.ERROR_MESSAGE);
        }
    }

    public void setBestUser(Date fromDate, Date toDate) {
        try {
            JasperReport jasperReport = (JasperReport) JRLoader.loadObject(getReportUrl(BEST_USER));
            HashMap<String, Object> dataMap = new HashMap<>();
            dataMap.put("fromDate", fromDate);
            dataMap.put("toDate", toDate);
            JasperPrint jasperPrint = JasperFillManager.fillReport(jasperReport, dataMap, openConnection);

//            JasperPrintManager.printReport(jasperPrint, true);
            JRViewer jr = new JRViewer(jasperPrint);
            pnlReport.add(jr);
            jr.revalidate();
        } catch (JRException ex) {
            Logger.getLogger(report_panel.class.getName()).log(Level.SEVERE, null, ex);
        } catch (NullPointerException ex) {
            JOptionPane.showMessageDialog(null, "No Value to Display..:(", "Error Message", JOptionPane.ERROR_MESSAGE);
        }
    }

    public void setGrnSummary(Date fromDate, Date toDate) {
        try {
            JasperReport jasperReport = (JasperReport) JRLoader.loadObject(getReportUrl(GRN));
            HashMap<String, Object> dataMap = new HashMap<>();
            dataMap.put("fromDate", fromDate);
            dataMap.put("toDate", toDate);
            JasperPrint jasperPrint = JasperFillManager.fillReport(jasperReport, dataMap, openConnection);

            JRViewer jr = new JRViewer(jasperPrint);
            pnlReport.add(jr);
            jr.revalidate();
        } catch (JRException ex) {
            Logger.getLogger(report_panel.class.getName()).log(Level.SEVERE, null, ex);
        } catch (NullPointerException ex) {
            JOptionPane.showMessageDialog(null, "No Value to Display..:(", "Error Message", JOptionPane.ERROR_MESSAGE);
        }
    }

    public void setClaim(ClaimModel claimModel) {
        try {
            JasperReport jasperReport = (JasperReport) JRLoader.loadObject(getReportUrl(CLAIM1));
            HashMap<String, Object> dataMap = new HashMap<>();
            dataMap.put("address", claimModel.getAddress());
            dataMap.put("amount", claimModel.getAmount());
            dataMap.put("axis_dist_left", claimModel.getAxisDistLeft());
            dataMap.put("axis_dist_right", claimModel.getAxisDistRight());
            dataMap.put("axis_near_left", claimModel.getAxisNearLeft());
            dataMap.put("axis_near_right", claimModel.getAxisNearRight());
            dataMap.put("contact", claimModel.getContact());
            dataMap.put("cyl_dist_left", claimModel.getCylDistLeft());
            dataMap.put("cyl_dist_right", claimModel.getCylDistRight());
            dataMap.put("cyl_near_left", claimModel.getCylNearLeft());
            dataMap.put("cyl_near_right", claimModel.getCylNearRight());
            dataMap.put("invoice_index", claimModel.getInvoiceIndex());
            dataMap.put("invoice_number", claimModel.getInvoiceNumber());
            dataMap.put("lens_brand", claimModel.getLensBrand());
            dataMap.put("lens_name", claimModel.getLensName());
            dataMap.put("lens_type", claimModel.getLensType());
            dataMap.put("name", claimModel.getName());
            dataMap.put("sph_dist_left", claimModel.getSphDistLeft());
            dataMap.put("sph_dist_right", claimModel.getSphDistReght());
            dataMap.put("sph_near_left", claimModel.getSphNearLeft());
            dataMap.put("sph_near_right", claimModel.getSphNearReght());

            dataMap.put("row_lens_name", claimModel.getLensName1());
            dataMap.put("row_lens_barcode", claimModel.getLensBarcode());
            dataMap.put("row_lens_category", claimModel.getLensCategory());
            dataMap.put("row_lens_brand", claimModel.getLensBrand1());
            dataMap.put("row_lens_unitprice", claimModel.getLensPrice());
            dataMap.put("row_frame_name", claimModel.getFrameName());
            dataMap.put("row_frame_barcode", claimModel.getFrameBarcode());
            dataMap.put("row_frame_category", claimModel.getFrameCategory());
            dataMap.put("row_frame_brand", claimModel.getFrameBrand());
            dataMap.put("row_frame_unitprice", claimModel.getFramePrice());
            dataMap.put("date", claimModel.getDate());

            JasperPrint jasperPrint = JasperFillManager.fillReport(jasperReport, dataMap, openConnection);

            JRViewer jr = new JRViewer(jasperPrint);
            pnlReport.add(jr);
            jr.revalidate();
        } catch (JRException ex) {
            Logger.getLogger(report_panel.class.getName()).log(Level.SEVERE, null, ex);
        } catch (NullPointerException ex) {
            JOptionPane.showMessageDialog(null, "No Value to Display..:(", "Error Message", JOptionPane.ERROR_MESSAGE);
        }
    }

    public void setChannelList(Date channelDate) {
        try {
            JasperReport jasperReport = (JasperReport) JRLoader.loadObject(getReportUrl(CHANNEL_LIST));
            HashMap<String, Object> dataMap = new HashMap<>();
            dataMap.put("channelDate", channelDate);
            JasperPrint jasperPrint = JasperFillManager.fillReport(jasperReport, dataMap, openConnection);

            JRViewer jr = new JRViewer(jasperPrint);
            pnlReport.add(jr);
            jr.revalidate();
        } catch (JRException ex) {
            Logger.getLogger(report_panel.class.getName()).log(Level.SEVERE, null, ex);
        } catch (NullPointerException ex) {
            JOptionPane.showMessageDialog(null, "No Value to Display..:(", "Error Message", JOptionPane.ERROR_MESSAGE);
        }
    }

    public void setInvoiceList(String fromdate, String toDate, String status) {
        try {
            JasperReport jasperReport = (JasperReport) JRLoader.loadObject(getReportUrl(INVOICE_LIST));
            HashMap<String, Object> dataMap = new HashMap<>();
            dataMap.put("fromDate", fromdate);
            dataMap.put("toDate", toDate);
            dataMap.put("type", status);
            JasperPrint jasperPrint = JasperFillManager.fillReport(jasperReport, dataMap, openConnection);

            JRViewer jr = new JRViewer(jasperPrint);
            pnlReport.add(jr);
            jr.revalidate();
        } catch (JRException ex) {
            Logger.getLogger(report_panel.class.getName()).log(Level.SEVERE, null, ex);
        } catch (NullPointerException ex) {
            JOptionPane.showMessageDialog(null, "No Value to Display..:(", "Error Message", JOptionPane.ERROR_MESSAGE);
        }
    }

    public void setFactoryReport(String indexNo) {
        try {
            JasperReport jasperReport = (JasperReport) JRLoader.loadObject(getReportUrl(FACTORY_REPORT));
            HashMap<String, Object> dataMap = new HashMap<>();
            dataMap.put("index", indexNo);
            JasperPrint jasperPrint = JasperFillManager.fillReport(jasperReport, dataMap, openConnection);

//            JasperPrintManager.printReport(jasperPrint, true);
            JRViewer jr = new JRViewer(jasperPrint);
            pnlReport.add(jr);
            jr.revalidate();

        } catch (JRException ex) {
            Logger.getLogger(report_panel.class.getName()).log(Level.SEVERE, null, ex);
        } catch (NullPointerException ex) {
            JOptionPane.showMessageDialog(null, "No Value to Display..:(", "Error Message", JOptionPane.ERROR_MESSAGE);
        }
    }

    public void setVoucherSummary(Date fromDate, Date toDate) {
        try {
            JasperReport jasperReport = (JasperReport) JRLoader.loadObject(getReportUrl(VOUCHER_SUMMARY));
            HashMap<String, Object> dataMap = new HashMap<>();
            dataMap.put("from", fromDate);
            dataMap.put("to", toDate);
            JasperPrint jasperPrint = JasperFillManager.fillReport(jasperReport, dataMap, openConnection);

//            JasperPrintManager.printReport(jasperPrint, true);
            JRViewer jr = new JRViewer(jasperPrint);
            pnlReport.add(jr);
            jr.revalidate();
        } catch (JRException ex) {
            Logger.getLogger(report_panel.class.getName()).log(Level.SEVERE, null, ex);
        } catch (NullPointerException ex) {
            JOptionPane.showMessageDialog(null, "No Value to Display..:(", "Error Message", JOptionPane.ERROR_MESSAGE);
        }
    }

    public void setDailyEarn(Date fromDate, Date toDate,String type) {
        try {
            JasperReport jasperReport =null;
            if (type.equals("Daily")) {
                jasperReport = (JasperReport) JRLoader.loadObject(getReportUrl(DAILY_EARN));
            }else if(type.equals("Monthly")){
                jasperReport = (JasperReport) JRLoader.loadObject(getReportUrl(MONTHLY_EARN));
            }else if(type.equals("Yearly")){
                jasperReport = (JasperReport) JRLoader.loadObject(getReportUrl(YEARLY_EARN));
            }else{
                throw new RuntimeException("Type Doesnt match!");
            }
            HashMap<String, Object> dataMap = new HashMap<>();
            dataMap.put("from", fromDate);
            dataMap.put("to", toDate);
            JasperPrint jasperPrint = JasperFillManager.fillReport(jasperReport, dataMap, openConnection);

//            JasperPrintManager.printReport(jasperPrint, true);
            JRViewer jr = new JRViewer(jasperPrint);
            pnlReport.add(jr);
            jr.revalidate();
        } catch (JRException ex) {
            Logger.getLogger(report_panel.class.getName()).log(Level.SEVERE, null, ex);
        } catch (NullPointerException ex) {
            JOptionPane.showMessageDialog(null, "No Value to Display..:(", "Error Message", JOptionPane.ERROR_MESSAGE);
        }
    }

    public void setChannelClaim(String patientName, String channelNo, Date channelDate, String channelTime, String doctorName, String consultantFee, String establishmentFee, String total, String paid, Date systemDate) {
         try {
            JasperReport jasperReport = (JasperReport) JRLoader.loadObject(getReportUrl(CHANNEL_CLAIM));
            HashMap<String, Object> dataMap = new HashMap<>();
            dataMap.put("c_no", channelNo);
            dataMap.put("date", channelDate);
            dataMap.put("patient_name", patientName);
            dataMap.put("time", channelTime);
            dataMap.put("doctor_name", doctorName);
            dataMap.put("consultant_fee", consultantFee);
            dataMap.put("establishment_fee", establishmentFee);
            dataMap.put("total", total);
            dataMap.put("paid", paid);
            dataMap.put("system_date", systemDate);
            JasperPrint jasperPrint = JasperFillManager.fillReport(jasperReport, dataMap, openConnection);

//            JasperPrintManager.printReport(jasperPrint, true);
            JRViewer jr = new JRViewer(jasperPrint);
            pnlReport.add(jr);
            jr.revalidate();
        } catch (JRException ex) {
            Logger.getLogger(report_panel.class.getName()).log(Level.SEVERE, null, ex);
        } catch (NullPointerException ex) {
            JOptionPane.showMessageDialog(null, "No Value to Display..:(", "Error Message", JOptionPane.ERROR_MESSAGE);
        }
    }
}
